parameters:
- name: TESTBED_NAME
  type: string
- name: UPGRADE_TYPE
  type: string
  default: warm
- name: FROM_IMAGE_LIST
  type: string
- name: FROM_IMAGE_URL
  type: string
- name: TO_IMAGE_LIST
  type: string
- name: TO_IMAGE_URL
  type: string
- name: METADATA_UPGRADE_PATH
  default: true
  type: boolean
- name: SKIP_SAD_CASES
  default: true
  type: boolean
- name: TEST_TCAM_HOLE
  default: false
  type: boolean

steps:
- script: |
    set -x
    cd sonic-mgmt-int
    BASE_PATH=`pwd`

    function get_image_type()
    {
      IMAGE_URL=$1
      arrURL=(${IMAGE_URL//./ })
      IMAGE_TYPE=${arrURL[-1]}
      echo "$IMAGE_TYPE"
    }
    function get_image_url()
    {
      IMAGE_URL=$1
      IMAGE_TYPE=$2
      arrURL=(${IMAGE_URL//.$IMAGE_TYPE/ })
      IMAGE_URL_PREFIX=${arrURL[0]}

      if [[ $IMAGE_URL == *"201811"* ]]; then
          IMAGE_SUFFIX=20181130
      elif [[ $IMAGE_URL == *"201911"* ]]; then
          IMAGE_SUFFIX=20191130
      elif [[ $IMAGE_URL == *"202012"* ]]; then
          IMAGE_SUFFIX=20201231
      fi
      echo "$IMAGE_URL_PREFIX-$IMAGE_SUFFIX"
    }
    IMAGE_TYPE=`get_image_type ${{ parameters.FROM_IMAGE_URL }}`
    FROM_IMAGE_URL=`get_image_url ${{ parameters.FROM_IMAGE_URL }} $IMAGE_TYPE`
    TO_IMAGE_URL=`get_image_url ${{ parameters.TO_IMAGE_URL }} $IMAGE_TYPE`
    cd tests

    if [[ ${{ parameters.METADATA_UPGRADE_PATH }} == True ]]; then
        metadata_process_option=--metadata_process
    fi
    if [[ ${{ parameters.SKIP_SAD_CASES }} == True ]]; then
        skip_sad_cases="metadata-scripts/test_metadata_upgrade_path.py::test_warm_upgrade_sad_path"
    else
        skip_sad_cases=" "
    fi
    if [[ ${{ parameters.TEST_TCAM_HOLE }} == True ]]; then
        tcam_hole_option=--tcam_hole
    fi

    FROM_IMAGE_LIST="${{ parameters.FROM_IMAGE_LIST }}"
    TO_IMAGE_LIST="${{ parameters.TO_IMAGE_LIST }}"
    UPGRADE_TYPE="${{ parameters.UPGRADE_TYPE }}"
    TEST_PASS="PASS"
    for from_image in $FROM_IMAGE_LIST; do
      echo =================== Upgrading from $from_image =====================
      for to_image in $TO_IMAGE_LIST; do
        echo ======== Upgrading to $to_image ========
        from_url=$FROM_IMAGE_URL.$from_image.$IMAGE_TYPE
        to_url=$TO_IMAGE_URL.$to_image.$IMAGE_TYPE
        if [[ $from_image == *"latest"* ]]; then
          from_url=${{ parameters.FROM_IMAGE_URL }}
        fi
        if [[ $to_image == *"latest"* ]]; then
          to_url=${{ parameters.TO_IMAGE_URL }}
        fi
        echo From URL is $from_url
        echo To URL is $to_url

        EXTRA_PARAMS="--showlocals --assert plain -rav --upgrade_type=$UPGRADE_TYPE --skip_sanity --base_image_list=$from_url --target_image_list=$to_url $metadata_process_option $tcam_hole_option"

        ./run_tests.sh -n ${{ parameters.TESTBED_NAME }} \
          -i $BASE_PATH/ansible/$INVENTORY_NAME,$BASE_PATH/ansible/veos \
          -m individual \
          -l INFO \
          -e "$EXTRA_PARAMS" \
          -u \
          -s "$skip_sad_cases" \
          -c "metadata-scripts/test_metadata_upgrade_path.py"

        ./run_tests.sh -n ${{ parameters.TESTBED_NAME }} \
          -i $BASE_PATH/ansible/$INVENTORY_NAME,$BASE_PATH/ansible/veos \
          -m individual \
          -l INFO \
          -e "$EXTRA_PARAMS" \
          -u \
          -s "$skip_sad_cases" \
          -c "metadata-scripts/test_metadata_scripts.py"

        if [ $? -ne 0 ]; then
            TEST_PASS="FAIL"
        fi
        sleep 60
      done
    done
    if [ "$TEST_PASS" = FAIL ]; then
        exit 1
    fi
  env:
    INVENTORY_NAME: $(INVENTORY_NAME)
  displayName: UpgradeSonic
- script: |
    sleep 180
  displayName: "Sleep"
