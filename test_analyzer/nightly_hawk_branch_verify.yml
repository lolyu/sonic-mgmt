# This job is for periodically auto recovery testbed

name:  AutoRecovery_$(Build.DefinitionName)_$(SourceBranchName)_$(Build.BuildId)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none


parameters:
  - name: BRANCH
    type: string
    default: internal
    values:
      - internal
      - internal-202012
      - internal-202205
      - master

  - name: SCRIPT_BRANCH
    type: string
    default: internal
    displayName: "branch name for running mgmt script"

  - name: TESTBEDS_NAME
    type: string
    default: 'vms20-t0-7050cx3-2,vms21-dual-t0-7260,vms7-t0-4600c-2,vms21-t1-2700-2'
    displayName: "testbeds names for verify"

  - name: LIBRARY
    type: string
    default: null
    displayName: "get testbed names from Library"

  - name: IMAGE_TAG
    type: string
    default: null
    displayName: "image tag"

  - name: FORCE
    type: boolean
    default: true
    displayName: "force run the test"

  - name: TESTBED_SPECIFIC
    type: string
    default: '-I "qos" -s "qos/test_buffer_traditional.py qos/test_buffer.py qos/test_pfc_counters.py qos/test_pfc_pause.py qos/test_qos_masic.py"'
    displayName: Testbed specific

  - name: SKIP_TEST_RESULTS_UPLOADING
    type: boolean
    default: True
    displayName: "Skip uploading test results to Kusto"

stages:
  - stage: AutoRecovery
    jobs:
      - job: AutoRecovery_Starlab
        pool: nightly
        timeoutInMinutes: 3600
        variables:
          - group: KUSTO_SECRETS
          - group: GIT_SECRETS
          - group: NIGHTLY_HAWK
          - group: TBSHARE_SECRETS
          - group: SECRETS_JSON
          - name: skipComponentGovernanceDetection
            value: true

        steps:

          # - template: ../.azure-pipelines/nightly/templates/get_secrets.yml

          - task: Bash@3
            displayName: Run auto recovery script
            inputs:
              targetType: 'inline'
              script: |
                set -x
                source /var/AzDevOps/env-python3/bin/activate

                cd test_analyzer
                pip3 install -r requirements.txt

                echo "TESTBEDS_NAME '${{ parameters.TESTBEDS_NAME }}'"
                echo "LIBRARY '${{ parameters.LIBRARY }}'"
                echo "IMAGE_TAG '${{ parameters.IMAGE_TAG }}'"
                python3 nightly_hawk_branch_verify.py -v DEBUG -b '${{ parameters.BRANCH }}' -n '${{ parameters.TESTBEDS_NAME }}' -i '${{ parameters.IMAGE_TAG }}' -s '${{ parameters.SCRIPT_BRANCH }}' -p '${{ parameters.TESTBED_SPECIFIC }}' -r '${{ parameters.SKIP_TEST_RESULTS_UPLOADING }}'

            env:
              TBSHARE_AAD_CLIENT_ID: $(TBSHARE_AAD_CLIENT_ID)
              TBSHARE_AAD_CLIENT_SECRET: $(TBSHARE_AAD_CLIENT_SECRET)
              TEST_REPORT_INGEST_KUSTO_CLUSTER_BACKUP: $(TEST_REPORT_INGEST_KUSTO_CLUSTER_BACKUP)
              TEST_REPORT_AAD_TENANT_ID_BACKUP: $(TEST_REPORT_AAD_TENANT_ID_BACKUP)
              TEST_REPORT_AAD_CLIENT_ID_BACKUP: $(TEST_REPORT_AAD_CLIENT_ID_BACKUP)
              TEST_REPORT_AAD_CLIENT_KEY_BACKUP: $(TEST_REPORT_AAD_CLIENT_KEY_BACKUP)
              AZURE_DEVOPS_MSAZURE_TOKEN: $(AZURE_DEVOPS_MSAZURE_TOKEN)
              AZURE_DEVOPS_MSSONIC_TOKEN: $(MSSONIC_TOKEN_NIGHTLY_HAWK)
              TESTBED_SPECIFIC: ${{ parameters.TESTBED_SPECIFIC }}
              SKIP_TEST_RESULTS_UPLOADING: ${{ parameters.SKIP_TEST_RESULTS_UPLOADING }}
